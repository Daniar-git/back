PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "django_migrations" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" datetime NOT NULL);
INSERT INTO django_migrations VALUES(1,'account','0001_initial','2023-02-22 09:10:02.676934');
INSERT INTO django_migrations VALUES(2,'contenttypes','0001_initial','2023-02-22 09:10:02.698106');
INSERT INTO django_migrations VALUES(3,'admin','0001_initial','2023-02-22 09:10:02.712683');
INSERT INTO django_migrations VALUES(4,'admin','0002_logentry_remove_auto_add','2023-02-22 09:10:02.727704');
INSERT INTO django_migrations VALUES(5,'admin','0003_logentry_add_action_flag_choices','2023-02-22 09:10:02.742022');
INSERT INTO django_migrations VALUES(6,'contenttypes','0002_remove_content_type_name','2023-02-22 09:10:02.764816');
INSERT INTO django_migrations VALUES(7,'auth','0001_initial','2023-02-22 09:10:02.795286');
INSERT INTO django_migrations VALUES(8,'auth','0002_alter_permission_name_max_length','2023-02-22 09:10:02.812048');
INSERT INTO django_migrations VALUES(9,'auth','0003_alter_user_email_max_length','2023-02-22 09:10:02.823310');
INSERT INTO django_migrations VALUES(10,'auth','0004_alter_user_username_opts','2023-02-22 09:10:02.835312');
INSERT INTO django_migrations VALUES(11,'auth','0005_alter_user_last_login_null','2023-02-22 09:10:02.846022');
INSERT INTO django_migrations VALUES(12,'auth','0006_require_contenttypes_0002','2023-02-22 09:10:02.853037');
INSERT INTO django_migrations VALUES(13,'auth','0007_alter_validators_add_error_messages','2023-02-22 09:10:02.864909');
INSERT INTO django_migrations VALUES(14,'auth','0008_alter_user_username_max_length','2023-02-22 09:10:02.875898');
INSERT INTO django_migrations VALUES(15,'auth','0009_alter_user_last_name_max_length','2023-02-22 09:10:02.888922');
INSERT INTO django_migrations VALUES(16,'auth','0010_alter_group_name_max_length','2023-02-22 09:10:02.904951');
INSERT INTO django_migrations VALUES(17,'auth','0011_update_proxy_permissions','2023-02-22 09:10:02.917397');
INSERT INTO django_migrations VALUES(18,'auth','0012_alter_user_first_name_max_length','2023-02-22 09:10:02.928448');
INSERT INTO django_migrations VALUES(19,'sessions','0001_initial','2023-02-22 09:10:02.942284');
INSERT INTO django_migrations VALUES(20,'account','0002_remove_user_tc','2023-02-22 09:33:31.007207');
INSERT INTO django_migrations VALUES(21,'django_rest_passwordreset','0001_initial','2023-02-24 11:51:10.477463');
INSERT INTO django_migrations VALUES(22,'django_rest_passwordreset','0002_pk_migration','2023-02-24 11:51:10.496764');
INSERT INTO django_migrations VALUES(23,'django_rest_passwordreset','0003_allow_blank_and_null_fields','2023-02-24 11:51:10.508158');
INSERT INTO django_migrations VALUES(24,'channel','0001_initial','2023-02-25 09:55:06.768694');
INSERT INTO django_migrations VALUES(25,'channel','0002_alter_channeldata_table','2023-02-25 09:55:06.774236');
INSERT INTO django_migrations VALUES(26,'feedback','0001_initial','2023-02-25 09:55:06.780678');
INSERT INTO django_migrations VALUES(27,'feedback','0002_alter_comment_table_alter_likes_table','2023-02-25 09:55:06.786371');
INSERT INTO django_migrations VALUES(28,'feedback','0003_alter_dislikes_table','2023-02-25 09:55:06.792058');
INSERT INTO django_migrations VALUES(29,'video','0001_initial','2023-02-25 09:55:06.800221');
INSERT INTO django_migrations VALUES(30,'video','0002_alter_categories_table_alter_playlists_table_and_more','2023-02-25 09:55:06.809230');
CREATE TABLE IF NOT EXISTS "django_admin_log" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "action_time" datetime NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "change_message" text NOT NULL, "content_type_id" integer NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "user_id" bigint NOT NULL REFERENCES "account_user" ("id") DEFERRABLE INITIALLY DEFERRED, "action_flag" smallint unsigned NOT NULL CHECK ("action_flag" >= 0));
CREATE TABLE IF NOT EXISTS "django_content_type" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL);
INSERT INTO django_content_type VALUES(1,'admin','logentry');
INSERT INTO django_content_type VALUES(2,'auth','permission');
INSERT INTO django_content_type VALUES(3,'auth','group');
INSERT INTO django_content_type VALUES(4,'contenttypes','contenttype');
INSERT INTO django_content_type VALUES(5,'sessions','session');
INSERT INTO django_content_type VALUES(6,'account','user');
INSERT INTO django_content_type VALUES(7,'django_rest_passwordreset','resetpasswordtoken');
INSERT INTO django_content_type VALUES(8,'channel','channeldata');
INSERT INTO django_content_type VALUES(9,'video','categories');
INSERT INTO django_content_type VALUES(10,'video','playlists');
INSERT INTO django_content_type VALUES(11,'video','videoanalytics');
INSERT INTO django_content_type VALUES(12,'video','videodetails');
INSERT INTO django_content_type VALUES(13,'video','viewerinformation');
INSERT INTO django_content_type VALUES(14,'video','views');
INSERT INTO django_content_type VALUES(15,'feedback','comment');
INSERT INTO django_content_type VALUES(16,'feedback','dislikes');
INSERT INTO django_content_type VALUES(17,'feedback','likes');
CREATE TABLE IF NOT EXISTS "auth_group_permissions" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "group_id" integer NOT NULL REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED, "permission_id" integer NOT NULL REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED);
CREATE TABLE IF NOT EXISTS "auth_permission" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "content_type_id" integer NOT NULL REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED, "codename" varchar(100) NOT NULL, "name" varchar(255) NOT NULL);
INSERT INTO auth_permission VALUES(1,1,'add_logentry','Can add log entry');
INSERT INTO auth_permission VALUES(2,1,'change_logentry','Can change log entry');
INSERT INTO auth_permission VALUES(3,1,'delete_logentry','Can delete log entry');
INSERT INTO auth_permission VALUES(4,1,'view_logentry','Can view log entry');
INSERT INTO auth_permission VALUES(5,2,'add_permission','Can add permission');
INSERT INTO auth_permission VALUES(6,2,'change_permission','Can change permission');
INSERT INTO auth_permission VALUES(7,2,'delete_permission','Can delete permission');
INSERT INTO auth_permission VALUES(8,2,'view_permission','Can view permission');
INSERT INTO auth_permission VALUES(9,3,'add_group','Can add group');
INSERT INTO auth_permission VALUES(10,3,'change_group','Can change group');
INSERT INTO auth_permission VALUES(11,3,'delete_group','Can delete group');
INSERT INTO auth_permission VALUES(12,3,'view_group','Can view group');
INSERT INTO auth_permission VALUES(13,4,'add_contenttype','Can add content type');
INSERT INTO auth_permission VALUES(14,4,'change_contenttype','Can change content type');
INSERT INTO auth_permission VALUES(15,4,'delete_contenttype','Can delete content type');
INSERT INTO auth_permission VALUES(16,4,'view_contenttype','Can view content type');
INSERT INTO auth_permission VALUES(17,5,'add_session','Can add session');
INSERT INTO auth_permission VALUES(18,5,'change_session','Can change session');
INSERT INTO auth_permission VALUES(19,5,'delete_session','Can delete session');
INSERT INTO auth_permission VALUES(20,5,'view_session','Can view session');
INSERT INTO auth_permission VALUES(21,6,'add_user','Can add user');
INSERT INTO auth_permission VALUES(22,6,'change_user','Can change user');
INSERT INTO auth_permission VALUES(23,6,'delete_user','Can delete user');
INSERT INTO auth_permission VALUES(24,6,'view_user','Can view user');
INSERT INTO auth_permission VALUES(25,7,'add_resetpasswordtoken','Can add Password Reset Token');
INSERT INTO auth_permission VALUES(26,7,'change_resetpasswordtoken','Can change Password Reset Token');
INSERT INTO auth_permission VALUES(27,7,'delete_resetpasswordtoken','Can delete Password Reset Token');
INSERT INTO auth_permission VALUES(28,7,'view_resetpasswordtoken','Can view Password Reset Token');
INSERT INTO auth_permission VALUES(29,8,'add_channeldata','Can add channeldata');
INSERT INTO auth_permission VALUES(30,8,'change_channeldata','Can change channeldata');
INSERT INTO auth_permission VALUES(31,8,'delete_channeldata','Can delete channeldata');
INSERT INTO auth_permission VALUES(32,8,'view_channeldata','Can view channeldata');
INSERT INTO auth_permission VALUES(33,9,'add_categories','Can add categories');
INSERT INTO auth_permission VALUES(34,9,'change_categories','Can change categories');
INSERT INTO auth_permission VALUES(35,9,'delete_categories','Can delete categories');
INSERT INTO auth_permission VALUES(36,9,'view_categories','Can view categories');
INSERT INTO auth_permission VALUES(37,10,'add_playlists','Can add playlists');
INSERT INTO auth_permission VALUES(38,10,'change_playlists','Can change playlists');
INSERT INTO auth_permission VALUES(39,10,'delete_playlists','Can delete playlists');
INSERT INTO auth_permission VALUES(40,10,'view_playlists','Can view playlists');
INSERT INTO auth_permission VALUES(41,11,'add_videoanalytics','Can add videoanalytics');
INSERT INTO auth_permission VALUES(42,11,'change_videoanalytics','Can change videoanalytics');
INSERT INTO auth_permission VALUES(43,11,'delete_videoanalytics','Can delete videoanalytics');
INSERT INTO auth_permission VALUES(44,11,'view_videoanalytics','Can view videoanalytics');
INSERT INTO auth_permission VALUES(45,12,'add_videodetails','Can add videodetails');
INSERT INTO auth_permission VALUES(46,12,'change_videodetails','Can change videodetails');
INSERT INTO auth_permission VALUES(47,12,'delete_videodetails','Can delete videodetails');
INSERT INTO auth_permission VALUES(48,12,'view_videodetails','Can view videodetails');
INSERT INTO auth_permission VALUES(49,13,'add_viewerinformation','Can add viewerinformation');
INSERT INTO auth_permission VALUES(50,13,'change_viewerinformation','Can change viewerinformation');
INSERT INTO auth_permission VALUES(51,13,'delete_viewerinformation','Can delete viewerinformation');
INSERT INTO auth_permission VALUES(52,13,'view_viewerinformation','Can view viewerinformation');
INSERT INTO auth_permission VALUES(53,14,'add_views','Can add views');
INSERT INTO auth_permission VALUES(54,14,'change_views','Can change views');
INSERT INTO auth_permission VALUES(55,14,'delete_views','Can delete views');
INSERT INTO auth_permission VALUES(56,14,'view_views','Can view views');
INSERT INTO auth_permission VALUES(57,15,'add_comment','Can add comment');
INSERT INTO auth_permission VALUES(58,15,'change_comment','Can change comment');
INSERT INTO auth_permission VALUES(59,15,'delete_comment','Can delete comment');
INSERT INTO auth_permission VALUES(60,15,'view_comment','Can view comment');
INSERT INTO auth_permission VALUES(61,16,'add_dislikes','Can add dislikes');
INSERT INTO auth_permission VALUES(62,16,'change_dislikes','Can change dislikes');
INSERT INTO auth_permission VALUES(63,16,'delete_dislikes','Can delete dislikes');
INSERT INTO auth_permission VALUES(64,16,'view_dislikes','Can view dislikes');
INSERT INTO auth_permission VALUES(65,17,'add_likes','Can add likes');
INSERT INTO auth_permission VALUES(66,17,'change_likes','Can change likes');
INSERT INTO auth_permission VALUES(67,17,'delete_likes','Can delete likes');
INSERT INTO auth_permission VALUES(68,17,'view_likes','Can view likes');
CREATE TABLE IF NOT EXISTS "auth_group" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(150) NOT NULL UNIQUE);
CREATE TABLE IF NOT EXISTS "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" datetime NOT NULL);
INSERT INTO django_session VALUES('863zdw8k12flc9bn4yg1zfvmodrqgjou','.eJxVjDsOwjAQBe_iGllZex1YSnrOYO36gwPIluKkQtwdIqWA9s3MeynP61L82tPsp6jOyqrD7yYcHqluIN653poOrS7zJHpT9E67vraYnpfd_Tso3Mu3RiDEKMaRhSzsslAyiIlGPIZsgGRwSCwyjM4C2OiETLRwQpMQDKn3B8zpNt4:1pUldB:Op977lmGT2wnrEWNUn4hli8FTdQ4iO310d4eV880xqo','2023-03-08 09:41:45.260299');
CREATE TABLE IF NOT EXISTS "account_user" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "password" varchar(128) NOT NULL, "last_login" datetime NULL, "email" varchar(255) NOT NULL UNIQUE, "name" varchar(200) NOT NULL, "is_active" bool NOT NULL, "is_admin" bool NOT NULL, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL);
CREATE TABLE IF NOT EXISTS "django_rest_passwordreset_resetpasswordtoken" ("created_at" datetime NOT NULL, "key" varchar(64) NOT NULL UNIQUE, "user_agent" varchar(256) NOT NULL, "user_id" bigint NOT NULL REFERENCES "account_user" ("id") DEFERRABLE INITIALLY DEFERRED, "id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "ip_address" char(39) NULL);
DELETE FROM sqlite_sequence;
INSERT INTO sqlite_sequence VALUES('django_migrations',30);
INSERT INTO sqlite_sequence VALUES('django_admin_log',0);
INSERT INTO sqlite_sequence VALUES('django_content_type',17);
INSERT INTO sqlite_sequence VALUES('auth_permission',68);
INSERT INTO sqlite_sequence VALUES('auth_group',0);
INSERT INTO sqlite_sequence VALUES('account_user',7);
INSERT INTO sqlite_sequence VALUES('django_rest_passwordreset_resetpasswordtoken',0);
CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id");
CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id");
CREATE UNIQUE INDEX "django_content_type_app_label_model_76bd3d3b_uniq" ON "django_content_type" ("app_label", "model");
CREATE UNIQUE INDEX "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" ON "auth_group_permissions" ("group_id", "permission_id");
CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id");
CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id");
CREATE UNIQUE INDEX "auth_permission_content_type_id_codename_01ab375a_uniq" ON "auth_permission" ("content_type_id", "codename");
CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id");
CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date");
CREATE INDEX "django_rest_passwordreset_resetpasswordtoken_user_id_e8015b11" ON "django_rest_passwordreset_resetpasswordtoken" ("user_id");
COMMIT;
